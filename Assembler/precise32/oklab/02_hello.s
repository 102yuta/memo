
        /*
         * GASでのHelloWorldプログラム
         */

        /*
         * アセンブルの仕方
         *
         * as -a=リストファイル -o 出力オブジェクト 入力アセンブラファイル
         *
         * as -a=02_hello.lst  -o 02_hello 02_hello.s
         *
         * -aオプションでリストファイルを生成できます。これによりメモリマップの確認などが
         * 出来ます。実際にアセンブルして確認してみましょう。
         *　
         * ヘルプの表示
         * as -h
         */

        # 1行のコメントの書き方。
        /*
         * 複数行のコメントを書く場合はC言語やJava言語と同じです。
         *
         */

        /*
         * ディレクティブ
         * ディレクティブは、コロンではじめて、これ以降をアセンブラがどのように解釈するかを指示します。例えば以下の場合、
         * .code32ディレクティブで32bitのアセンブラを出力してくださいと指示しています。
         */
        .code32
        .text

        /* .globalディレクティブでここからはじめますよ！とアセンブラに教えています。
         * .global mainのmain部分はラベルを指定します。つまりこの場合は、mainラベルへ進め！という
         * 意味になります。その後にすぐmainラベルを書いています。
         *
         * ラベル名:
         * main    :
         *
         * 書き方は、ラベル名にコロンです。アセンブラの場合はラベル名を作ってそこにジャンプして
         * 処理を進めていきます。ret命令は、returnの略でその名のとおり処理を戻します。
         * 今はとりあえず処理が終わるのだなと考えておいてください。
         */
        .global main
main:
          ret

        .data

          # データはこちらに書いていく。
